exports[`E2E: CDK output > Workflow: HelloWorkflow > matches the expected output snapshot 1`] = `
"{\\n  \\"Resources\\": {\\n    \\"HelloWorkflowsayHelloLambdaServiceRole2F450822\\": {\\n      \\"Type\\": \\"AWS::IAM::Role\\",\\n      \\"Properties\\": {\\n        \\"AssumeRolePolicyDocument\\": {\\n          \\"Statement\\": [\\n            {\\n              \\"Action\\": \\"sts:AssumeRole\\",\\n              \\"Effect\\": \\"Allow\\",\\n              \\"Principal\\": {\\n                \\"Service\\": \\"lambda.amazonaws.com\\"\\n              }\\n            }\\n          ],\\n          \\"Version\\": \\"2012-10-17\\"\\n        },\\n        \\"ManagedPolicyArns\\": [\\n          {\\n            \\"Fn::Join\\": [\\n              \\"\\",\\n              [\\n                \\"arn:\\",\\n                {\\n                  \\"Ref\\": \\"AWS::Partition\\"\\n                },\\n                \\":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\\"\\n              ]\\n            ]\\n          }\\n        ]\\n      }\\n    },\\n    \\"HelloWorkflowsayHelloLambda131364A7\\": {\\n      \\"Type\\": \\"AWS::Lambda::Function\\",\\n      \\"Properties\\": {\\n        \\"Code\\": {\\n          \\"ZipFile\\": \\"return \`Hello, \${name}\`;\\"\\n        },\\n        \\"FunctionName\\": \\"sayHello\\",\\n        \\"Handler\\": \\"index.handler\\",\\n        \\"MemorySize\\": 128,\\n        \\"Role\\": {\\n          \\"Fn::GetAtt\\": [\\n            \\"HelloWorkflowsayHelloLambdaServiceRole2F450822\\",\\n            \\"Arn\\"\\n          ]\\n        },\\n        \\"Runtime\\": \\"nodejs20.x\\",\\n        \\"Timeout\\": 30000\\n      },\\n      \\"DependsOn\\": [\\n        \\"HelloWorkflowsayHelloLambdaServiceRole2F450822\\"\\n      ]\\n    },\\n    \\"HelloWorkflowsayGoodbyeLambdaServiceRole1B78FB93\\": {\\n      \\"Type\\": \\"AWS::IAM::Role\\",\\n      \\"Properties\\": {\\n        \\"AssumeRolePolicyDocument\\": {\\n          \\"Statement\\": [\\n            {\\n              \\"Action\\": \\"sts:AssumeRole\\",\\n              \\"Effect\\": \\"Allow\\",\\n              \\"Principal\\": {\\n                \\"Service\\": \\"lambda.amazonaws.com\\"\\n              }\\n            }\\n          ],\\n          \\"Version\\": \\"2012-10-17\\"\\n        },\\n        \\"ManagedPolicyArns\\": [\\n          {\\n            \\"Fn::Join\\": [\\n              \\"\\",\\n              [\\n                \\"arn:\\",\\n                {\\n                  \\"Ref\\": \\"AWS::Partition\\"\\n                },\\n                \\":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\\"\\n              ]\\n            ]\\n          }\\n        ]\\n      }\\n    },\\n    \\"HelloWorkflowsayGoodbyeLambda0AB04863\\": {\\n      \\"Type\\": \\"AWS::Lambda::Function\\",\\n      \\"Properties\\": {\\n        \\"Code\\": {\\n          \\"ZipFile\\": \\"return \`Goodbye, \${name}\`;\\"\\n        },\\n        \\"FunctionName\\": \\"sayGoodbye\\",\\n        \\"Handler\\": \\"index.handler\\",\\n        \\"MemorySize\\": 128,\\n        \\"Role\\": {\\n          \\"Fn::GetAtt\\": [\\n            \\"HelloWorkflowsayGoodbyeLambdaServiceRole1B78FB93\\",\\n            \\"Arn\\"\\n          ]\\n        },\\n        \\"Runtime\\": \\"nodejs20.x\\",\\n        \\"Timeout\\": 30000\\n      },\\n      \\"DependsOn\\": [\\n        \\"HelloWorkflowsayGoodbyeLambdaServiceRole1B78FB93\\"\\n      ]\\n    },\\n    \\"HelloWorkflowRoleA25ED20D\\": {\\n      \\"Type\\": \\"AWS::IAM::Role\\",\\n      \\"Properties\\": {\\n        \\"AssumeRolePolicyDocument\\": {\\n          \\"Statement\\": [\\n            {\\n              \\"Action\\": \\"sts:AssumeRole\\",\\n              \\"Effect\\": \\"Allow\\",\\n              \\"Principal\\": {\\n                \\"Service\\": \\"states.amazonaws.com\\"\\n              }\\n            }\\n          ],\\n          \\"Version\\": \\"2012-10-17\\"\\n        }\\n      }\\n    },\\n    \\"HelloWorkflowRoleDefaultPolicy386F5D69\\": {\\n      \\"Type\\": \\"AWS::IAM::Policy\\",\\n      \\"Properties\\": {\\n        \\"PolicyDocument\\": {\\n          \\"Statement\\": [\\n            {\\n              \\"Action\\": \\"lambda:InvokeFunction\\",\\n              \\"Effect\\": \\"Allow\\",\\n              \\"Resource\\": [\\n                {\\n                  \\"Fn::GetAtt\\": [\\n                    \\"HelloWorkflowsayHelloLambda131364A7\\",\\n                    \\"Arn\\"\\n                  ]\\n                },\\n                {\\n                  \\"Fn::Join\\": [\\n                    \\"\\",\\n                    [\\n                      {\\n                        \\"Fn::GetAtt\\": [\\n                          \\"HelloWorkflowsayHelloLambda131364A7\\",\\n                          \\"Arn\\"\\n                        ]\\n                      },\\n                      \\":*\\"\\n                    ]\\n                  ]\\n                }\\n              ]\\n            },\\n            {\\n              \\"Action\\": \\"lambda:InvokeFunction\\",\\n              \\"Effect\\": \\"Allow\\",\\n              \\"Resource\\": [\\n                {\\n                  \\"Fn::GetAtt\\": [\\n                    \\"HelloWorkflowsayGoodbyeLambda0AB04863\\",\\n                    \\"Arn\\"\\n                  ]\\n                },\\n                {\\n                  \\"Fn::Join\\": [\\n                    \\"\\",\\n                    [\\n                      {\\n                        \\"Fn::GetAtt\\": [\\n                          \\"HelloWorkflowsayGoodbyeLambda0AB04863\\",\\n                          \\"Arn\\"\\n                        ]\\n                      },\\n                      \\":*\\"\\n                    ]\\n                  ]\\n                }\\n              ]\\n            }\\n          ],\\n          \\"Version\\": \\"2012-10-17\\"\\n        },\\n        \\"PolicyName\\": \\"HelloWorkflowRoleDefaultPolicy386F5D69\\",\\n        \\"Roles\\": [\\n          {\\n            \\"Ref\\": \\"HelloWorkflowRoleA25ED20D\\"\\n          }\\n        ]\\n      }\\n    },\\n    \\"HelloWorkflowF5EFFB5B\\": {\\n      \\"Type\\": \\"AWS::StepFunctions::StateMachine\\",\\n      \\"Properties\\": {\\n        \\"DefinitionString\\": {\\n          \\"Fn::Join\\": [\\n            \\"\\",\\n            [\\n              \\"{\\\\\\"StartAt\\\\\\":\\\\\\"sayHello\\\\\\",\\\\\\"States\\\\\\":{\\\\\\"sayHello\\\\\\":{\\\\\\"Next\\\\\\":\\\\\\"sayGoodbye\\\\\\",\\\\\\"Retry\\\\\\":[{\\\\\\"ErrorEquals\\\\\\":[\\\\\\"Lambda.ClientExecutionTimeoutException\\\\\\",\\\\\\"Lambda.ServiceException\\\\\\",\\\\\\"Lambda.AWSLambdaException\\\\\\",\\\\\\"Lambda.SdkClientException\\\\\\"],\\\\\\"IntervalSeconds\\\\\\":2,\\\\\\"MaxAttempts\\\\\\":6,\\\\\\"BackoffRate\\\\\\":2}],\\\\\\"Type\\\\\\":\\\\\\"Task\\\\\\",\\\\\\"InputPath\\\\\\":\\\\\\"$\\\\\\",\\\\\\"OutputPath\\\\\\":\\\\\\"$.Payload\\\\\\",\\\\\\"Resource\\\\\\":\\\\\\"arn:\\",\\n              {\\n                \\"Ref\\": \\"AWS::Partition\\"\\n              },\\n              \\":states:::lambda:invoke\\\\\\",\\\\\\"Parameters\\\\\\":{\\\\\\"FunctionName\\\\\\":\\\\\\"\\",\\n              {\\n                \\"Fn::GetAtt\\": [\\n                  \\"HelloWorkflowsayHelloLambda131364A7\\",\\n                  \\"Arn\\"\\n                ]\\n              },\\n              \\"\\\\\\",\\\\\\"Payload.$\\\\\\":\\\\\\"$\\\\\\"}},\\\\\\"sayGoodbye\\\\\\":{\\\\\\"End\\\\\\":true,\\\\\\"Retry\\\\\\":[{\\\\\\"ErrorEquals\\\\\\":[\\\\\\"Lambda.ClientExecutionTimeoutException\\\\\\",\\\\\\"Lambda.ServiceException\\\\\\",\\\\\\"Lambda.AWSLambdaException\\\\\\",\\\\\\"Lambda.SdkClientException\\\\\\"],\\\\\\"IntervalSeconds\\\\\\":2,\\\\\\"MaxAttempts\\\\\\":6,\\\\\\"BackoffRate\\\\\\":2}],\\\\\\"Type\\\\\\":\\\\\\"Task\\\\\\",\\\\\\"InputPath\\\\\\":\\\\\\"$\\\\\\",\\\\\\"OutputPath\\\\\\":\\\\\\"$.Payload\\\\\\",\\\\\\"Resource\\\\\\":\\\\\\"arn:\\",\\n              {\\n                \\"Ref\\": \\"AWS::Partition\\"\\n              },\\n              \\":states:::lambda:invoke\\\\\\",\\\\\\"Parameters\\\\\\":{\\\\\\"FunctionName\\\\\\":\\\\\\"\\",\\n              {\\n                \\"Fn::GetAtt\\": [\\n                  \\"HelloWorkflowsayGoodbyeLambda0AB04863\\",\\n                  \\"Arn\\"\\n                ]\\n              },\\n              \\"\\\\\\",\\\\\\"Payload.$\\\\\\":\\\\\\"$\\\\\\"}}}}\\"\\n            ]\\n          ]\\n        },\\n        \\"RoleArn\\": {\\n          \\"Fn::GetAtt\\": [\\n            \\"HelloWorkflowRoleA25ED20D\\",\\n            \\"Arn\\"\\n          ]\\n        }\\n      },\\n      \\"DependsOn\\": [\\n        \\"HelloWorkflowRoleDefaultPolicy386F5D69\\",\\n        \\"HelloWorkflowRoleA25ED20D\\"\\n      ],\\n      \\"UpdateReplacePolicy\\": \\"Delete\\",\\n      \\"DeletionPolicy\\": \\"Delete\\"\\n    }\\n  },\\n  \\"Parameters\\": {\\n    \\"BootstrapVersion\\": {\\n      \\"Type\\": \\"AWS::SSM::Parameter::Value<String>\\",\\n      \\"Default\\": \\"/cdk-bootstrap/hnb659fds/version\\",\\n      \\"Description\\": \\"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\\"\\n    }\\n  },\\n  \\"Rules\\": {\\n    \\"CheckBootstrapVersion\\": {\\n      \\"Assertions\\": [\\n        {\\n          \\"Assert\\": {\\n            \\"Fn::Not\\": [\\n              {\\n                \\"Fn::Contains\\": [\\n                  [\\n                    \\"1\\",\\n                    \\"2\\",\\n                    \\"3\\",\\n                    \\"4\\",\\n                    \\"5\\"\\n                  ],\\n                  {\\n                    \\"Ref\\": \\"BootstrapVersion\\"\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          \\"AssertDescription\\": \\"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\\"\\n        }\\n      ]\\n    }\\n  }\\n}"
`;

exports[`E2E: CDK output > Workflow: LambdaWithOptions > matches the expected output snapshot 1`] = `
"{\\n  \\"Resources\\": {\\n    \\"LambdaWithOptionssayHelloLambdaServiceRole267242E1\\": {\\n      \\"Type\\": \\"AWS::IAM::Role\\",\\n      \\"Properties\\": {\\n        \\"AssumeRolePolicyDocument\\": {\\n          \\"Statement\\": [\\n            {\\n              \\"Action\\": \\"sts:AssumeRole\\",\\n              \\"Effect\\": \\"Allow\\",\\n              \\"Principal\\": {\\n                \\"Service\\": \\"lambda.amazonaws.com\\"\\n              }\\n            }\\n          ],\\n          \\"Version\\": \\"2012-10-17\\"\\n        },\\n        \\"ManagedPolicyArns\\": [\\n          {\\n            \\"Fn::Join\\": [\\n              \\"\\",\\n              [\\n                \\"arn:\\",\\n                {\\n                  \\"Ref\\": \\"AWS::Partition\\"\\n                },\\n                \\":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\\"\\n              ]\\n            ]\\n          }\\n        ]\\n      }\\n    },\\n    \\"LambdaWithOptionssayHelloLambdaC2712BAC\\": {\\n      \\"Type\\": \\"AWS::Lambda::Function\\",\\n      \\"Properties\\": {\\n        \\"Code\\": {\\n          \\"ZipFile\\": \\"return \`Hello, \${name}\`;\\"\\n        },\\n        \\"Description\\": \\"A simple lambda function that greets a user by name\\",\\n        \\"FunctionName\\": \\"sayHello\\",\\n        \\"Handler\\": \\"index.handler\\",\\n        \\"MemorySize\\": 128,\\n        \\"Role\\": {\\n          \\"Fn::GetAtt\\": [\\n            \\"LambdaWithOptionssayHelloLambdaServiceRole267242E1\\",\\n            \\"Arn\\"\\n          ]\\n        },\\n        \\"Runtime\\": \\"nodejs20.x\\",\\n        \\"Timeout\\": 5\\n      },\\n      \\"DependsOn\\": [\\n        \\"LambdaWithOptionssayHelloLambdaServiceRole267242E1\\"\\n      ]\\n    },\\n    \\"LambdaWithOptionsHelloWorkflowRole44EBE198\\": {\\n      \\"Type\\": \\"AWS::IAM::Role\\",\\n      \\"Properties\\": {\\n        \\"AssumeRolePolicyDocument\\": {\\n          \\"Statement\\": [\\n            {\\n              \\"Action\\": \\"sts:AssumeRole\\",\\n              \\"Effect\\": \\"Allow\\",\\n              \\"Principal\\": {\\n                \\"Service\\": \\"states.amazonaws.com\\"\\n              }\\n            }\\n          ],\\n          \\"Version\\": \\"2012-10-17\\"\\n        }\\n      }\\n    },\\n    \\"LambdaWithOptionsHelloWorkflowRoleDefaultPolicyD69F5648\\": {\\n      \\"Type\\": \\"AWS::IAM::Policy\\",\\n      \\"Properties\\": {\\n        \\"PolicyDocument\\": {\\n          \\"Statement\\": [\\n            {\\n              \\"Action\\": \\"lambda:InvokeFunction\\",\\n              \\"Effect\\": \\"Allow\\",\\n              \\"Resource\\": [\\n                {\\n                  \\"Fn::GetAtt\\": [\\n                    \\"LambdaWithOptionssayHelloLambdaC2712BAC\\",\\n                    \\"Arn\\"\\n                  ]\\n                },\\n                {\\n                  \\"Fn::Join\\": [\\n                    \\"\\",\\n                    [\\n                      {\\n                        \\"Fn::GetAtt\\": [\\n                          \\"LambdaWithOptionssayHelloLambdaC2712BAC\\",\\n                          \\"Arn\\"\\n                        ]\\n                      },\\n                      \\":*\\"\\n                    ]\\n                  ]\\n                }\\n              ]\\n            }\\n          ],\\n          \\"Version\\": \\"2012-10-17\\"\\n        },\\n        \\"PolicyName\\": \\"LambdaWithOptionsHelloWorkflowRoleDefaultPolicyD69F5648\\",\\n        \\"Roles\\": [\\n          {\\n            \\"Ref\\": \\"LambdaWithOptionsHelloWorkflowRole44EBE198\\"\\n          }\\n        ]\\n      }\\n    },\\n    \\"LambdaWithOptionsHelloWorkflowEF774C47\\": {\\n      \\"Type\\": \\"AWS::StepFunctions::StateMachine\\",\\n      \\"Properties\\": {\\n        \\"DefinitionString\\": {\\n          \\"Fn::Join\\": [\\n            \\"\\",\\n            [\\n              \\"{\\\\\\"StartAt\\\\\\":\\\\\\"sayHello\\\\\\",\\\\\\"States\\\\\\":{\\\\\\"sayHello\\\\\\":{\\\\\\"End\\\\\\":true,\\\\\\"Retry\\\\\\":[{\\\\\\"ErrorEquals\\\\\\":[\\\\\\"Lambda.ClientExecutionTimeoutException\\\\\\",\\\\\\"Lambda.ServiceException\\\\\\",\\\\\\"Lambda.AWSLambdaException\\\\\\",\\\\\\"Lambda.SdkClientException\\\\\\"],\\\\\\"IntervalSeconds\\\\\\":2,\\\\\\"MaxAttempts\\\\\\":6,\\\\\\"BackoffRate\\\\\\":2}],\\\\\\"Type\\\\\\":\\\\\\"Task\\\\\\",\\\\\\"InputPath\\\\\\":\\\\\\"$\\\\\\",\\\\\\"OutputPath\\\\\\":\\\\\\"$.Payload\\\\\\",\\\\\\"Resource\\\\\\":\\\\\\"arn:\\",\\n              {\\n                \\"Ref\\": \\"AWS::Partition\\"\\n              },\\n              \\":states:::lambda:invoke\\\\\\",\\\\\\"Parameters\\\\\\":{\\\\\\"FunctionName\\\\\\":\\\\\\"\\",\\n              {\\n                \\"Fn::GetAtt\\": [\\n                  \\"LambdaWithOptionssayHelloLambdaC2712BAC\\",\\n                  \\"Arn\\"\\n                ]\\n              },\\n              \\"\\\\\\",\\\\\\"Payload.$\\\\\\":\\\\\\"$\\\\\\"}}}}\\"\\n            ]\\n          ]\\n        },\\n        \\"RoleArn\\": {\\n          \\"Fn::GetAtt\\": [\\n            \\"LambdaWithOptionsHelloWorkflowRole44EBE198\\",\\n            \\"Arn\\"\\n          ]\\n        }\\n      },\\n      \\"DependsOn\\": [\\n        \\"LambdaWithOptionsHelloWorkflowRoleDefaultPolicyD69F5648\\",\\n        \\"LambdaWithOptionsHelloWorkflowRole44EBE198\\"\\n      ],\\n      \\"UpdateReplacePolicy\\": \\"Delete\\",\\n      \\"DeletionPolicy\\": \\"Delete\\"\\n    }\\n  },\\n  \\"Parameters\\": {\\n    \\"BootstrapVersion\\": {\\n      \\"Type\\": \\"AWS::SSM::Parameter::Value<String>\\",\\n      \\"Default\\": \\"/cdk-bootstrap/hnb659fds/version\\",\\n      \\"Description\\": \\"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\\"\\n    }\\n  },\\n  \\"Rules\\": {\\n    \\"CheckBootstrapVersion\\": {\\n      \\"Assertions\\": [\\n        {\\n          \\"Assert\\": {\\n            \\"Fn::Not\\": [\\n              {\\n                \\"Fn::Contains\\": [\\n                  [\\n                    \\"1\\",\\n                    \\"2\\",\\n                    \\"3\\",\\n                    \\"4\\",\\n                    \\"5\\"\\n                  ],\\n                  {\\n                    \\"Ref\\": \\"BootstrapVersion\\"\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          \\"AssertDescription\\": \\"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\\"\\n        }\\n      ]\\n    }\\n  }\\n}"
`;
