// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`E2E: CDK output Workflow: HelloWorkflow matches the expected output snapshot 1`] = `
"{
  "Resources": {
    "HelloWorkflowsayHello0LambdaServiceRole6DB9CEFE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "HelloWorkflowsayHello0Lambda4A23DFF4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "module.exports.handler = async () => { return \\"Hello from Lambda\\"; };"
        },
        "FunctionName": "sayHello",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "HelloWorkflowsayHello0LambdaServiceRole6DB9CEFE",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x",
        "Timeout": 30000
      },
      "DependsOn": [
        "HelloWorkflowsayHello0LambdaServiceRole6DB9CEFE"
      ]
    },
    "HelloWorkflowsayGoodbye1LambdaServiceRoleA8AD29FD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "HelloWorkflowsayGoodbye1LambdaDA1F1EF8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "module.exports.handler = async () => { return \\"Hello from Lambda\\"; };"
        },
        "FunctionName": "sayGoodbye",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "HelloWorkflowsayGoodbye1LambdaServiceRoleA8AD29FD",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x",
        "Timeout": 30000
      },
      "DependsOn": [
        "HelloWorkflowsayGoodbye1LambdaServiceRoleA8AD29FD"
      ]
    },
    "HelloWorkflowRoleA25ED20D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "HelloWorkflowRoleDefaultPolicy386F5D69": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HelloWorkflowsayHello0Lambda4A23DFF4",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HelloWorkflowsayHello0Lambda4A23DFF4",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HelloWorkflowsayGoodbye1LambdaDA1F1EF8",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HelloWorkflowsayGoodbye1LambdaDA1F1EF8",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "HelloWorkflowRoleDefaultPolicy386F5D69",
        "Roles": [
          {
            "Ref": "HelloWorkflowRoleA25ED20D"
          }
        ]
      }
    },
    "HelloWorkflowF5EFFB5B": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\\"StartAt\\":\\"sayHello_0\\",\\"States\\":{\\"sayHello_0\\":{\\"Next\\":\\"sayGoodbye_1\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ClientExecutionTimeoutException\\",\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"InputPath\\":\\"$\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              {
                "Fn::GetAtt": [
                  "HelloWorkflowsayHello0Lambda4A23DFF4",
                  "Arn"
                ]
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"sayGoodbye_1\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ClientExecutionTimeoutException\\",\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"InputPath\\":\\"$\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              {
                "Fn::GetAtt": [
                  "HelloWorkflowsayGoodbye1LambdaDA1F1EF8",
                  "Arn"
                ]
              },
              "\\",\\"Payload.$\\":\\"$\\"}}}}"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "HelloWorkflowRoleA25ED20D",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "HelloWorkflowRoleDefaultPolicy386F5D69",
        "HelloWorkflowRoleA25ED20D"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}"
`;

exports[`E2E: CDK output Workflow: LambdaWithOptions matches the expected output snapshot 1`] = `
"{
  "Resources": {
    "LambdaWithOptionssayHello0LambdaServiceRole46A3DA95": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LambdaWithOptionssayHello0Lambda2EA03324": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "module.exports.handler = async () => { return \\"Hello from Lambda\\"; };"
        },
        "Description": "A simple lambda function that greets a user by name",
        "FunctionName": "sayHello",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "LambdaWithOptionssayHello0LambdaServiceRole46A3DA95",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x",
        "Timeout": 5
      },
      "DependsOn": [
        "LambdaWithOptionssayHello0LambdaServiceRole46A3DA95"
      ]
    },
    "LambdaWithOptionsHelloWorkflowRole44EBE198": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "LambdaWithOptionsHelloWorkflowRoleDefaultPolicyD69F5648": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LambdaWithOptionssayHello0Lambda2EA03324",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LambdaWithOptionssayHello0Lambda2EA03324",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaWithOptionsHelloWorkflowRoleDefaultPolicyD69F5648",
        "Roles": [
          {
            "Ref": "LambdaWithOptionsHelloWorkflowRole44EBE198"
          }
        ]
      }
    },
    "LambdaWithOptionsHelloWorkflowEF774C47": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\\"StartAt\\":\\"sayHello_0\\",\\"States\\":{\\"sayHello_0\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ClientExecutionTimeoutException\\",\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"InputPath\\":\\"$\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              {
                "Fn::GetAtt": [
                  "LambdaWithOptionssayHello0Lambda2EA03324",
                  "Arn"
                ]
              },
              "\\",\\"Payload.$\\":\\"$\\"}}}}"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaWithOptionsHelloWorkflowRole44EBE198",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LambdaWithOptionsHelloWorkflowRoleDefaultPolicyD69F5648",
        "LambdaWithOptionsHelloWorkflowRole44EBE198"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}"
`;
